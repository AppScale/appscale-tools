---
# The underlying cloud infrastructure to deploy AppScale over.
# Set this to 'ec2' if running on Amazon EC2, 'euca' if running on Eucalyptus,
# 'gce' if running on Google Compute Engine, or 'azure' if running on
# Microsoft Azure.
infrastructure : 'ec2'

# The Amazon / Eucalyptus Machine Image (ami or emi) or Azure image resource
# url that has AppScale installed on it. When running on Google Compute Engine,
# set this to the name of the image you set when you ran 'gcutil addimage'.
machine : 'ami-XXXXXX'
# machine: 'https://{storageaccount}.blob.core.windows.net/system/' +
#   'Microsoft.Compute/Images/{containerName}/{VhdPrefix-Name}.vhd' # For Azure

# The instance type that should be used for all virtual machines in your
# AppScale deployment, if running in Amazon EC2, Azure, Eucalyptus or
# Google Compute Engine.
instance_type : 'm3.medium' # For Amazon EC2 and Eucalyptus
#instance_type : 'n1-standard-1' # For Google Compute Engine
#instance_type : 'Standard_A3' # For Azure

# The availability zone that should be used for all virtual machines in your
# AppScale deployment. If using persistent disks in your AppScale deployment,
# they should be in the same zone that you specify here.
zone : 'us-east-1b' # For Amazon EC2
#zone: 'us-central1-a' # For Google Compute Engine
#zone: 'West US' # For Microsoft Azure

# The AWS keyname that should be used for all machines in this AppScale
# deployment. This should refer to a keyname that does not already exist
# in your AWS account. By default, we randomly generate a keyname for you.
#keyname : 'appscalekey'

# The AWS security group name that should be used for all machines in this
# AppScale deployment. This should refer to a keyname that does not already
# exist in your AWS account. When running in Google Compute Engine, this is
# the name that will be used for the network and firewall that is created
# for your GCE instances. By default, we randomly generate a group for you.
#group : 'appscalegroup'

# Whether or not increased output should be presented to standard output.
# We recommend setting this to True if you are encountering issues with
# AppScale and wish to see precisely where they are coming from.
#verbose : True

# The minimum number of machines that should be used for your AppScale
# deployment.
min : 1

# The maximum number of machines that should be used for your AppScale
# deployment.
max : 1

# The location on your computer where an OAuth2.0 client ID for an installed
# application can be found, which enables the AppScale Tools to talk to Google
# Compute Engine on your behalf.
#client_secrets: '~/client_secrets.json'

# The Azure resource group name that should be used for all the machines in
# this AppScale deployment.
#azure_resource_group: 'azureresourcegroup'

# The tag for the resource group in case a new resource group for Azure has
# to be created.
#azure_group_tag: 'azuregrouptag'

# The Azure storage account name that should be used while creating the
# virtual machines.
#azure_storage_account: 'azurestorageaccount'

# The Azure subscription ID for your account to use for AppScale deployment.
#azure_subscription_id :

# The application or the client ID from the Azure Portal.
#azure_app_id :

# The tenant ID from the view endpoints section on the Azure Portal.
#azure_tenant_id :

# The authentication key for the application on the Azure Portal.
#azure_app_secret_key :

# The Project ID associated with your Google Compute Engine project.
# Note: Do not use the Project Name or the Project Number.
#project: 'project-id-here'

# The Elastic IP (in Amazon Web Services) or Static IP (in Google Compute Engine)
# that should be used for your first machine's public IP address.
#static_ip: '1.2.3.4'

# The number of copies (replicas) of each piece of data stored in the
# specified database. By default, we determine the optimal value based
# on the number of virtual machines running the 'database' role, by the
# formula: min(# of database VMs, 3). Setting this value lower increases
# performance, at the cost of fault-tolerance, and vice-versa.
# n : 1

# The password that should be used for the flower web interface that displays
# information about Task Queue tasks.
# flower_password: 'appscale'

# AppScale developers only: The location of an AppScale source tree on
# the local filesystem, that should be used in place of what is present
# on the AppScale VMs. Useful to test changes on multiple VMs without
# needing to manually rsync code or rebundle images.
# scp : "~/appscale"

# AppScale developers only: Bypasses the usual prompt for a cloud
# username and password and uses a default set of values. Insecure for
# a production environment but acceptable for testing.
# test : True

# The number of AppServers that should be used to host each Google App
# Engine application running in this deployment. By default, we start
# with one AppServer and dynamically scale up or down based on
# (1) the number of requests serviced and (2) the number of enqueued
# requests, but this setting can be used to turn off this autoscaling
# and instead use a statically defined number of AppServers.
# appengine : 3

# The maximum amount of memory (in megabytes) to use for each Google App Engine
# application running in this deployment. By default, we limit each app server
# to 400 MB of memory.
# max_memory: 400

# Runs the following commands before starting the AppController on each machine.
# user_commands:
# - 'apt-get install -y htop'
# - 'apt-get install -y vim'
