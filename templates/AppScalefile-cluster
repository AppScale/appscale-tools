---
# The deployment strategy (roles -> machines) that should be used in this
# AppScale deployment.
# The following is a sample layout for running everything on one machine:
ips_layout :
  master : 192.168.1.2
  appengine : 192.168.1.2
  database : 192.168.1.2
  zookeeper : 192.168.1.2

# Alternatively, the following is a layout that separates everything onto
# four machines:
# ips_layout :
#  master : 192.168.1.2
#  appengine : 192.168.1.3
#  database : 192.168.1.4
#  zookeeper : 192.168.1.5

# The previous two layouts only have one instance of each role running, so if
# that machine fails, there is no backup to take its place. This layout uses
# eight machines to provide failure resiliency:
# ips_layout:
#  master : 192.168.1.2
#  appengine:
#   - 192.168.1.3
#   - 192.168.1.4
#  database:
#   - 192.168.1.5
#   - 192.168.1.6
#  zookeeper:  # zookeeper uses paxos, so it needs a majority up (hence 3)
#   - 192.168.1.7
#   - 192.168.1.8
#   - 192.168.1.9

# The database that your Google App Engine applications will be backed by.
# Defaults to 'cassandra', but 'hypertable' is also supported.
table : 'cassandra'

# Whether or not increased output should be presented to standard output.
# We recommend setting this to True if you are encountering issues with
# AppScale and wish to see precisely where they are coming from.
#verbose : True

# The number of copies (replicas) of each piece of data stored in the
# specified database. By default, we determine the optimal value based
# on the number of virtual machines running the 'database' role, by the
# formula: min(# of database VMs, 3). Setting this value lower increases
# performance, at the cost of fault-tolerance, and vice-versa.
# n : 1

# AppScale developers only: The location of an AppScale source tree on
# the local filesystem, that should be used in place of what is present
# on the AppScale VMs. Useful to test changes on multiple VMs without
# needing to manually rsync code or rebundle images.
# scp : "~/appscale"

# AppScale developers only: Bypasses the usual prompt for a cloud
# username and password and uses a default set of values. Insecure for
# a production environment but acceptable for testing.
# test : True

# The number of AppServers that should be used to host each Google App
# Engine application running in this deployment. By default, we start
# with one AppServer and dynamically scale up or down based on
# (1) the number of requests serviced and (2) the number of enqueued
# # requests, but this setting can be used to turn off this autoscaling
# and instead use a statically defined number of AppServers.
# appengine : 3
